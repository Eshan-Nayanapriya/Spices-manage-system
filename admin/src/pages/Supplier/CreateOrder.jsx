import React, { useState } from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";

const port = 4000;

function CreateOrder() {
  const [name, setName] = useState("");
  const [id, setID] = useState("");
  const [quantity, setQuantity] = useState("");
  const [price, setPrice] = useState("");
  const [deadLine, setDeadLine] = useState("");
  const [priceError, setPriceError] = useState("");
  const navigate = useNavigate();

  const generateUniqueID = () => {
    // Generate a unique ID here, you can use UUID or any other method
    return Math.floor(Math.random() * 1000000).toString();
  };

  const handleAutogenerateID = () => {
    const autoGeneratedID = generateUniqueID();
    setID(autoGeneratedID);
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (validateForm()) {
      axios
        .post(`http://localhost:${port}/api/supplier/request/create`, {
          name: name,
          rid: id,
          quantity: quantity,
          price: price,
          deadLine: deadLine,
        })
        .then((result) => {
          console.log(result);
          navigate("/SupplyRequest");
        })
        .catch((err) => console.log(err));
    }
  };

  const validateForm = () => {
    let isValid = true;

    if (!price.match(/^\d+(\.\d{1,2})?$/)) {
      isValid = false;
      setPriceError("Price must be a number with up to 2 decimal places");
    } else {
      setPriceError("");
    }

    return isValid;
  };

  return (
    <div
      style={{
        marginLeft: "400px",
        marginTop: "50px",
        width: "100%",
        justifyContent: "center",
        alignItems: "center",
        height: "100vh",
        backgroundColor: "#ffffff",
        backgroundImage: `url('../res/spice9.jpg')`,
        backgroundSize: "cover",
        backgroundPosition: "left",
      }}
    >
      <div
        style={{
          width: "50%",
          backgroundColor: "tomato",
          opacity: "0.9",
          borderRadius: "10px",
          padding: "16px",
        }}
      >
        <form onSubmit={handleSubmit}>
          <h2>Add Supply Requests</h2>
          <div style={{ margin: "0 auto", maxWidth: "500px" }}>
            <div>
              <label htmlFor="name">Name:</label>
              <input
                type="text"
                id="name"
                placeholder="Enter Raw Material Name"
                style={{
                  padding: "8px",
                  borderRadius: "5px",
                  border: "1px solid #ccc",
                  width: "100%",
                  marginBottom: "10px",
                }}
                value={name}
                onChange={(e) => setName(e.target.value)}
              />
            </div>
            <div>
              <label htmlFor="id">Request ID:</label>
              <input
                type="text"
                id="id"
                placeholder="Enter Request id"
                style={{
                  padding: "8px",
                  borderRadius: "5px",
                  border: "1px solid #ccc",
                  width: "70%",
                  marginBottom: "10px",
                }}
                value={id}
                onChange={(e) => {
                  setID(e.target.value);
                }}
              />
              <button
                type="button"
                onClick={handleAutogenerateID}
                style={{
                  padding: "8px 12px",
                  backgroundColor: "#007bff",
                  color: "#fff",
                  border: "none",
                  borderRadius: "5px",
                  cursor: "pointer",
                }}
              >
                Autogenerate ID
              </button>
            </div>
            <div>
              <label htmlFor="quantity">Quantity (KG & Grams):</label>
              <input
                type="text"
                id="quantity"
                placeholder="Enter Quantity"
                style={{
                  padding: "8px",
                  borderRadius: "5px",
                  border: "1px solid #ccc",
                  width: "100%",
                  marginBottom: "10px",
                }}
                value={quantity}
                onChange={(e) => setQuantity(e.target.value)}
              />
            </div>
            <div>
              <label htmlFor="price">Price (LKR):</label>
              <input
                type="text"
                id="price"
                placeholder="Enter Price Per KG"
                style={{
                  padding: "8px",
                  borderRadius: "5px",
                  border: "1px solid #ccc",
                  width: "100%",
                  marginBottom: "10px",
                }}
                value={price}
                onChange={(e) => setPrice(e.target.value)}
              />
              <span style={{ color: "red" }}>{priceError}</span>
            </div>
            <div>
              <label htmlFor="deadline">Deadline:</label>
              <input
                type="date"
                id="deadline"
                placeholder="Select Deadline"
                style={{
                  padding: "8px",
                  borderRadius: "5px",
                  border: "1px solid #ccc",
                  width: "100%",
                  marginBottom: "10px",
                }}
                value={deadLine}
                onChange={(e) => setDeadLine(e.target.value)}
              />
            </div>
            <button
              type="submit"
              style={{
                padding: "10px 20px",
                backgroundColor: "#28a745",
                color: "#fff",
                border: "none",
                borderRadius: "5px",
                cursor: "pointer",
              }}
            >
              Submit
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}

export default CreateOrder;
